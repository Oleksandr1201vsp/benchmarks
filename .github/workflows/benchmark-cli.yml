---
name: Benchmark CLI

on: repository_dispatch

jobs:
  benchmark:
    name: Benchmark CLI

    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
        node-version: [10.x, 12.x]

    runs-on: ${{ matrix.os }}

    steps:
      # Checkout `npm/benchmark` repo
      - name: checkout/npm/benchmarks
        uses: actions/checkout@v1.1.0
        with:
          path: ${{ env.RUNNER_WORKSPACE }}
      # Checkout repo incoming dispatch request is from (eg. npm/cli)
      - name: checkout/${{ github.event.client_payload.owner }}/${{ github.event.client_payload.repo }}
        uses: actions/checkout@v1.1.0
        with:
          repository: ${{ github.event.client_payload.owner }}/${{ github.event.client_payload.repo }}
          ref: ${{ github.event.client_payload.commit_sha }}
          fetch-depth: 1
          token: ${{ secrets.NPM_DEPLOY_USER_PAT }}
          path: ${{ env.RUNNER_WORKSPACE }}
      # Setup nodejs
      - name: use nodejs ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-verison }}

      # Install npm/benchmark dependencies
      - name: Install benchmark deps
        run: |
          cd "${GITHUB_WORKSPACE}"
          echo "PWD: $(pwd)"
          npm --loglevel=silly install --production

      # CONDITIONALLY: `npm/cli` unlink the binary
      - name: Unlink npm/cli
        if: github.event.client_payload.repo == 'cli'
        run: |
          cd "${RUNNER_WORKSPACE}/${{ github.event.client_payload.repo }}"
          echo "PWD: $(pwd)"
          sudo node bin/npm-cli.js rm npm -g -f

      # CONDITIONALLY: `npm/cli` globally link the binary
      - name: Globally link npm/cli
        if: github.event.client_payload.repo == 'cli'
        run: |
          cd "${RUNNER_WORKSPACE}/${{ github.event.client_payload.repo }}"
          echo "PWD: $(pwd)"
          sudo node bin/npm-cli.js link -f

      # CONDITIONALLY: `npm/cli` validate the binary is linked
      - name: Validate link npm/cli
        if: github.event.client_payload.repo == 'cli'
        run: |
          cd "${RUNNER_WORKSPACE}/${{ github.event.client_payload.repo }}"
          echo "PWD: $(pwd)"
          echo "Command Path: $(which npm)"
          echo "Global node_modules: "
          ls -l "$(dirname $(which npm))/../lib/node_modules"
          echo "PWD: $(pwd)"
          echo "Current Commit: $(git log --oneline -1)"

      # Run benchmarking suite
      - name: Run Benchmark (Pull-Request)
        if: github.event.action == 'pull_request'
        run: |
          echo "Running benchmark..."
          echo "PWD: $(pwd)"
          npm run benchmark:pr

      # Run benchmarking suite
      - name: Run Benchmark (Push)
        if: github.event.action == 'push'
        run: |
          echo "Running benchmark..."
          echo "PWD: $(pwd)"
          npm run benchmark:release

      # CONDITIONALLY: Post to pull-request
      - name: Post to Pull-Request
        if: github.event.action == 'pull_request'
        env:
          PR_ID: ${{ github.event.client_payload.pr_id }}
          REPO: ${{ github.event.client_payload.repo }}
          OWNER: ${{ github.event.client_payload.owner }}
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          echo "Posting to pull-request..."
          npm run comment

      # CONDITIONALLY: Commit results of benchmark suite into `npm/benchmark` repo
      - name: Commit Results
        if: github.event.action == 'push' && matrix.os == 'ubuntu-latest' && matrix.node-version == '10.x'
        env:
          REPO: ${{ github.event.client_payload.repo }}
          OWNER: ${{ github.event.client_payload.owner }}
        run: |
          set -x
          cd "${GITHUB_WORKSPACE}"
          echo "OS: ${{ matrix.os }}"
          echo "NODE-VERSION: ${{ matrix.node-version }}"
          echo "Committing results..."
          echo "PWD: $(pwd)"
          git remote -v
          git status
          git checkout -b master --track origin/master
          git config user.email "ops+npm-deploy-user@npmjs.com"
          git config user.name "beep boop I am a robot"
          git config --list
          git add results/
          git commit -m "ci: updated results [CI/CD]"
          git log --oneline -3
          git push origin master
